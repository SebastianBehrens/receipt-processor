"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv

# Load environment variables from config/.env
load_dotenv(Path(__file__).parent / '.env')

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path('/Users/sebastianbehrens/coding/htmx-receipt-processor')


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-3=q1151stnn$^q279xibxu2dagbkj7bg4%ae9y&jj#!ricnq=n"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# Development vs Production configuration
USE_AUTHELIA = os.environ.get('USE_AUTHELIA', 'False').lower() == 'true'

# Configure for deployment with Traefik and Authelia
# Add your domain(s) here when deploying
ALLOWED_HOSTS = ['localhost', '127.0.0.1', '*']  # '*' for development only - restrict in production


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "core",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
]

# Add Authelia middleware only when needed
if USE_AUTHELIA:
    MIDDLEWARE.extend([
        "core.middleware.AutheliaRemoteUserMiddleware",  # Custom middleware for Authelia
        "core.middleware.AutheliaHeadersMiddleware",  # Debug middleware (optional)
    ])

MIDDLEWARE.extend([
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
])

ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "config.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators
# Disabled - using Authelia for authentication

AUTH_PASSWORD_VALIDATORS = []


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "static/"

# Media files (user uploads)
MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "data"

# File upload settings
FILE_UPLOAD_MAX_MEMORY_SIZE = 104857600  # 100MB
DATA_UPLOAD_MAX_MEMORY_SIZE = 104857600  # 100MB

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Logging configuration

# Ensure logs directory exists
LOGS_DIR = BASE_DIR / 'logs'
LOGS_DIR.mkdir(exist_ok=True)

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '%(asctime)s [%(levelname)8s]: %(message)s',
        },
        'simple': {
            'format': '%(asctime)s [%(levelname)8s]: %(message)s',
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
            'level': 'INFO',  # Only show INFO and above in console
        },
        'file': {
            'class': 'logging.FileHandler',
            'filename': LOGS_DIR / 'django.log',
            'formatter': 'verbose',
            'level': 'DEBUG',  # Capture everything in file
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'INFO',
    },
    'loggers': {
        'core': {
            'handlers': ['console', 'file'],
            'level': 'DEBUG',  # Allow all levels from our app
            'propagate': False,
        },
        'django': {
            'handlers': ['console'],  # Only console for Django to avoid noise
            'level': 'INFO',
            'propagate': False,
        },
    },
}

# Authentication configuration for Authelia
if USE_AUTHELIA:
    AUTHENTICATION_BACKENDS = [
        'django.contrib.auth.backends.RemoteUserBackend',  # Prioritize RemoteUserBackend for Authelia
        'django.contrib.auth.backends.ModelBackend',  # Keep ModelBackend for superuser/local admin access
    ]
    
    # Automatically create new Django users if they don't exist
    # This is usually desired with remote authentication
    AUTH_REMOTE_USER_CREATE_UNKNOWN_USER = True
else:
    # Default Django authentication for local development
    AUTHENTICATION_BACKENDS = [
        'django.contrib.auth.backends.ModelBackend',
    ]

# Authelia configuration
# Authelia sends the username in the 'Remote-User' header by default
# If Authelia is configured to send a different header, uncomment and modify:
# REMOTE_USER_HEADER = 'HTTP_X_AUTHELIA_USER'  # Django converts hyphens to underscores and prepends HTTP_

# Optional: Configure additional user attributes from Authelia headers
# These headers need to be configured in your Authelia and Traefik setup
# REMOTE_USER_EMAIL_HEADER = 'HTTP_X_AUTHELIA_EMAIL'
# REMOTE_USER_FIRST_NAME_HEADER = 'HTTP_X_AUTHELIA_NAME'
# REMOTE_USER_LAST_NAME_HEADER = 'HTTP_X_AUTHELIA_SURNAME'
